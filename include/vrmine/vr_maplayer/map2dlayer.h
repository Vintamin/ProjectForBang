//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 二三维爆破信息仿真系统
//  @ File Name : c2dlayer.h
//  @ Date : 2015/8/1
//  @ Author : 
//
//



#if !defined(_C2DLAYER_H)
#define _C2DLAYER_H

#include "vrmine/vr_maplayer/igeometrydrawitem.h"
#include "vrmine/vr_spatiallayer/scenelayer.h"
#include <QtGui/QPixmap>

namespace VirtualMine
{
	namespace Map
	{

		class VR_MAPLAYER_EXPORT CMap2DLayer : public VirtualMine::SpatialLayer::CSceneLayer,public IDrawObject,public ISelectObject
		{
		public:
			CMap2DLayer();
			virtual ~CMap2DLayer();
			virtual IGeometryDrawItem* addGeometryItem(const IGeometryDrawItem::EGeometryItemType& type);
			virtual IGeometryDrawItem* getGeometryItem(const std::string& geometryName);
			virtual void removeGeometryItem(const std::string& geometryName);
			virtual void notifyUpdate();
			virtual void setHighlightColor();
			virtual void getHighlightColor();
			virtual void setVisible(const bool& value);
			virtual std::string getName();
			virtual void setName(const std::string& name);
			virtual void computeBoundingBox();
			virtual bool draw(QPainter& painter,
				const int& viewWidth,const int& viewHeight,
				const QPointF& viewLeftTopPosition,
				const QPointF& viewRightBottomPosition,
				const float& curScale);
			virtual QPixmap& getLayerImage();
			virtual bool pointSelect(const QPointF& mousePrjPos,const double& tolerance);
			//virtual void setVisibled(const int& type,const bool& value)=0;

		protected:
			std::string mName;
			std::vector<IGeometryDrawItem*> mGeometryItems;
			QPixmap mLayerImage;
			Ogre::AxisAlignedBox box;




		};

	}}
#endif  //_C2DLAYER_H
