//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 二三维爆破信息仿真系统
//  @ File Name : idrawobject.h
//  @ Date : 2015/8/1
//  @ Author : 
//
//


#if !defined(_IDRAWOBJECT_H)
#define _IDRAWOBJECT_H
#include <QtGui/QPainter>

#include "vrmine/vr_maplayer/vr_maplayer_global.h"
#include "OGRE/OgreAxisAlignedBox.h"
#include "vrmine/vr_core/event.h"
#include "vrmine/vr_spatialinterface/ilayer.h"

namespace VirtualMine
{
	namespace Map
	{

		class VR_MAPLAYER_EXPORT IDrawObject 
		{
		public:
			virtual bool draw(QPainter& painter,
				const int& viewWidth,const int& viewHeight,
				const QPointF& viewLeftTopPosition,
				const QPointF& viewRightBottomPosition,
				const float& curScale);
		};

		class VR_MAPLAYER_EXPORT CHighLightEvent : public VirtualMine::Core::CEvent
		{
		public:
			CHighLightEvent();
			virtual ~CHighLightEvent();
			VirtualMine::Map::IDrawObject* getDrawObject();
			void setDrawObject(VirtualMine::Map::IDrawObject* ref_pDrawObject);

		protected:
			VirtualMine::Map::IDrawObject* ref_mpDrawObject;
		};

		class VR_MAPLAYER_EXPORT CBangLayerLoadEvent : public VirtualMine::Core::CEvent
		{
		public:
			CBangLayerLoadEvent()
			{
				ref_mp2DLayer = NULL;
				ref_mp3DLayer = NULL;
			}
			virtual ~CBangLayerLoadEvent()
			{

			}
			VirtualMine::SpatialInterface::ILayer* get2DLayer()
			{
				return this->ref_mp2DLayer;
			}
			VirtualMine::SpatialInterface::ILayer* get3DLayer()
			{
				return this->ref_mp3DLayer;
			}
			void set2DLayer(VirtualMine::SpatialInterface::ILayer* ref_p2DLayer)
			{
				this->ref_mp2DLayer = ref_p2DLayer;
			}
			void set3DLayer(VirtualMine::SpatialInterface::ILayer* ref_p3DLayer)
			{
				this->ref_mp3DLayer = ref_p3DLayer;
			}

		protected:
			VirtualMine::SpatialInterface::ILayer* ref_mp3DLayer;
			VirtualMine::SpatialInterface::ILayer* ref_mp2DLayer;
		};

		class VR_MAPLAYER_EXPORT CBangLayerFlyToSceneEvent : public VirtualMine::Core::CEvent
		{
		public:
			CBangLayerFlyToSceneEvent()
			{
				ref_mp3DLayer = NULL;
			}
			virtual ~CBangLayerFlyToSceneEvent()
			{

			}
		
			VirtualMine::SpatialInterface::ILayer* get3DLayer()
			{
				return this->ref_mp3DLayer;
			}	
			void set3DLayer(VirtualMine::SpatialInterface::ILayer* ref_p3DLayer)
			{
				this->ref_mp3DLayer = ref_p3DLayer;
			}

		protected:
			VirtualMine::SpatialInterface::ILayer* ref_mp3DLayer;
		};

		class VR_MAPLAYER_EXPORT CRefreshMapEvent : public VirtualMine::Core::CEvent
		{
		public:
			CRefreshMapEvent()
			{

			}
			~CRefreshMapEvent()
			{

			}
		};

		class VR_MAPLAYER_EXPORT ISelectObject
		{
		public:
			ISelectObject(){};
			virtual ~ISelectObject(){};
			virtual bool pointSelect(const QPointF& mousePrjPos,const double& tolerance)
			{
				return false;
			}
			virtual bool polygonSelect(const QPointF& mousePrjPos1,const QPointF& mousePrjPos2)
			{
				return false;
			}

			virtual bool getSelected()
			{
				return false;
			}
		};

		class VR_MAPLAYER_EXPORT CVisibleObject
		{
		public:
			CVisibleObject()
			{
				this->mVisible = true;
			}
			virtual ~CVisibleObject()
			{

			}
			virtual void setVisible(const bool& visible)
			{
				this->mVisible = visible;
			}
			virtual bool getVisible()
			{
				return this->mVisible;
			}
		private:
			bool mVisible;
		};

	}}
#endif  //_IDRAWOBJECT_H
