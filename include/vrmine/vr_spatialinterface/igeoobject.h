//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : igeoobject.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_IGEOOBJECT_H)
#define _IGEOOBJECT_H


#include "vrmine\vr_spatialinterface\istyle.h"
#include "vrmine\vr_spatialinterface\igeometry.h"
#include <vector>
#include "OGRE/OgreManualObject.h"
#include "OGRE/OgreSceneManager.h"
#include "vrmine/vr_databaseengine/database/ifeature.h"
#include "vrmine\vr_spatialinterface\igeoproperty.h"
#include "vrmine\vr_spatialinterface\parameter.h"
#include "vrmine\vr_core\baseobject.h"
//kk
//#include "vrmine/vr_spatialrender/baserender/moveabletext.h"
namespace VirtualMine
{
	namespace SpatialInterface
	{
		class IGeoObject;
		class CGeoObject;
		class CGeoExtentionData;
		class CGeoObject_privateData;
		typedef std::vector<IGeoObject*> GeoObjectVector;
		typedef std::vector<CGeoExtentionData*> GeoExtentionDataVector;
		typedef std::map<double,IGeoObject*> GeoObjectMap;
		class VR_SPATIALINTERFACE_DLL IGeoObject 
		{
		public:
			IGeoObject();
			virtual ~IGeoObject();
			virtual void setID(const int& id) = 0;
			virtual int getID() = 0;

			virtual void setName(std::string& name) = 0;
			virtual std::string getName() = 0;
			virtual void setType(std::string& type)=0;
			virtual std::string& getType()=0;
			virtual void setVisible(const bool& visible)=0;
			virtual bool getVisible()=0;
			virtual void setStyle(VirtualMine::SpatialInterface::IStyle* ref_pStyle,const bool& isRef)=0;
			virtual VirtualMine::SpatialInterface::IStyle* getStyle()=0;
			virtual VirtualMine::SpatialInterface::IGeometry* getGeometry()=0;
			virtual void setGeometry(VirtualMine::SpatialInterface::IGeometry* ref_pGeometry,const bool& isRef)=0;
			virtual IGeoProperty* getGeoProperty()=0;
			virtual void setGeoProperty(IGeoProperty* ref_pGeoProperty,const bool& isRef)=0;
			virtual void fromFeature(VirtualMine::Database::IFeature* pFeature)=0;
			virtual VirtualMine::Database::IFeature* toFeature()=0;
		};

		class VR_SPATIALINTERFACE_DLL CGeoObject:public IGeoObject, public VirtualMine::Core::CBaseObject
		{
		public:
			CGeoObject();
			virtual ~CGeoObject();
			virtual void setID(const int& id);
			virtual int getID();
			virtual void setName(std::string& name);
			virtual std::string getName();
			virtual void setType(std::string& type);
			virtual std::string& getType();
			virtual void setVisible(const bool& visible);
			virtual bool getVisible();
			virtual void setStyle(VirtualMine::SpatialInterface::IStyle* ref_pStyle,const bool& isRef);
			virtual VirtualMine::SpatialInterface::IStyle* getStyle()=0;
			virtual VirtualMine::SpatialInterface::IGeometry* getGeometry()=0;
			virtual void setGeometry(VirtualMine::SpatialInterface::IGeometry* ref_pGeometry,const bool& isRef);
			virtual IGeoProperty* getGeoProperty()=0;
			virtual void setGeoProperty(IGeoProperty* ref_pGeoProperty,const bool& isRef);
			virtual void fromFeature(VirtualMine::Database::IFeature* pFeature);
			virtual VirtualMine::Database::IFeature* toFeature();

		protected:
			CGeoObject_privateData* mpPrivate;
		};

		class VR_SPATIALINTERFACE_DLL CGeoExtentionData
		{
		public:

			CGeoExtentionData();
			CGeoExtentionData(Ogre::SceneManager* ref_pSceneMgr);

			~CGeoExtentionData();

			void setExtentionData(Ogre::ManualObject* manualObject);
			Ogre::ManualObject* getExtentionData();
			CGeoObject* getOwnerObject();
			void setOwnerObject(CGeoObject* ref_pOwnerObject);
			void setSceneManager(Ogre::SceneManager* ref_pSceneMgr);
			//kk
			bool isTextObject;
			void setIsTextObject(bool judge);
			Ogre::Vector3 textPosition;
			void setTextPosition(Ogre::Vector3 center);
			//VirtualMine::BaseRender::MovableText* myMovableText;

			
		protected:
			Ogre::ManualObject* mpExtentionData;
			Ogre::SceneManager* ref_mpSceneMgr;
			CGeoObject* ref_mpOwnerObject;
		};

		class VR_SPATIALINTERFACE_DLL CGeoInstanceExtentionData : public CGeoExtentionData
		{
		public:
			CGeoInstanceExtentionData();
			CGeoInstanceExtentionData(Ogre::SceneManager* ref_pSceneMgr);
			virtual ~CGeoInstanceExtentionData();
			void addParameter(const VirtualMine::SpatialInterface::CParameter& param);
			VirtualMine::SpatialInterface::CParameter& getParameter(const int& index);
			void removeParameter(const int& index);
			int getCount();
			
		protected:
			std::vector<VirtualMine::SpatialInterface::CParameter> mInstanceParams;

		};

	}
}

#endif  //_IGEOOBJECT_H
