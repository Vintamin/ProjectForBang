//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : geospatialscene.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_ISCENE_H)
#define _ISCENE_H

#include "vrmine\vr_spatialinterface\spatialinterface_config.h"
#include <string>
#include "OGRE\OgreSceneManager.h"
#include "vrmine\vr_spatialinterface\ilayer.h"


namespace VirtualMine
{
	namespace SpatialInterface
	{
		class VR_SPATIALINTERFACE_DLL IScene
		{
		public:
			IScene();
			virtual ~IScene();
			virtual void setName(const std::string& name)=0;
			virtual std::string getName()=0;
			virtual void setVisible(const bool& value)=0;
			virtual bool getVisible()=0;
			virtual void setGeoSceneManager(Ogre::SceneManager* ref_pSceneManager)=0;
			virtual Ogre::SceneManager* getGeoSceneManager()=0;
			virtual VirtualMine::SpatialInterface::ILayer* createLayer(const std::string& name,const std::string& layerType)=0;
			virtual VirtualMine::SpatialInterface::ILayer* createLayer(const std::string& name)=0;
			virtual VirtualMine::SpatialInterface::ILayer* getLayer(const std::string& name)=0;
			virtual void removeLayer(VirtualMine::SpatialInterface::ILayer* layer)=0;
			virtual void removeLayer(const std::string& layerName)=0;

			virtual LayerMap& getLayerMap()=0;
			virtual int getLayerCount()=0;
			virtual VirtualMine::SpatialInterface::ILayer* getImageLayer()=0;
			virtual VirtualMine::SpatialInterface::ILayer* getDemLayer()=0;
			virtual VirtualMine::SpatialInterface::ILayer* getModelLayer()=0;
			virtual VirtualMine::SpatialInterface::ILayer* getLanewayLayer()=0;
			virtual void initial()=0;
			virtual void draw()=0;
			virtual void toFile(const std::string& filename) = 0;
			virtual void fromFile(const std::string& filename) = 0;
			virtual	std::string getCurDirName();
			virtual void setCurDirName(const std::string& curName);
			static Ogre::Vector3 transformCoor(const Ogre::Vector3& coor);

		public:
			static Ogre::Vector3 ReferenceCenter;
			static Ogre::Real CoefficientOfCoordinateTransform;

		};
	}
}

#endif  //_GEOSPATIALSCENE_H
