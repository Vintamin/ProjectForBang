//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : geospatialscene.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_GEOSPATIALSCENE_H)
#define _GEOSPATIALSCENE_H

#include "vrmine\vr_scenecontrol\scenecontrol_config.h"
#include "vrmine\vr_spatialinterface\iscene.h"
#include "vrmine\vr_spatialinterface\ilayer.h"
#include "vrmine\vr_spatialengine\geoscenemanager.h"
#include "vrmine/vr_spatiallayer/demlayer.h"
#include "vrmine/vr_spatiallayer/imagelayer.h"
#include "vrmine\vr_core\event.h"
#include <string>

namespace VirtualMine
{
	namespace Scene
	{
		class VR_SCENECONTROL_DLL CGeoSpatialScene : public VirtualMine::SpatialInterface::IScene
		{
		public:
			CGeoSpatialScene();
			virtual ~CGeoSpatialScene();
			virtual void setName(const std::string& name);
			virtual std::string getName();
			virtual void setVisible(const bool& value);
			virtual bool getVisible();
			virtual void setGeoSceneManager(Ogre::SceneManager* ref_pSceneManager);
			virtual Ogre::SceneManager* getGeoSceneManager();
			virtual VirtualMine::SpatialInterface::ILayer* createLayer(const std::string& name,const std::string& layerType);
			virtual VirtualMine::SpatialInterface::ILayer* createLayer(const std::string& name);
			virtual void removeLayer(VirtualMine::SpatialInterface::ILayer* layer);
			virtual void removeLayer(const std::string& layerName);
			virtual VirtualMine::SpatialInterface::ILayer* getLayer(const std::string& name);
			virtual VirtualMine::SpatialInterface::LayerMap& getLayerMap();
			virtual int getLayerCount();
			virtual VirtualMine::SpatialInterface::ILayer* getImageLayer();
			virtual VirtualMine::SpatialInterface::ILayer* getDemLayer();
			virtual VirtualMine::SpatialInterface::ILayer* getModelLayer();
			virtual VirtualMine::SpatialInterface::ILayer* getLanewayLayer();
			virtual void initial();
			virtual void draw();
			virtual Ogre::Vector3 getReferenceCenter();
			virtual void setReferenceCenter(const Ogre::Vector3& referenceCenter);

			virtual void toFile(const std::string& filename);
			virtual void fromFile(const std::string& filename);
			
			std::string getCurDirName();
			void setCurDirName(const std::string& curName);

		private:
			VirtualMine::SpatialEngine::CGeoSceneManager* ref_mpSceneManager;
			std::string mName;
			std::string mCurDirName;
			bool mVisible;
			Ogre::Vector3 mReferenceCenter;
			VirtualMine::SpatialInterface::LayerMap mLayerMap;
			VirtualMine::SpatialLayer::CImageLayer* mpImageLayer;
			VirtualMine::SpatialLayer::CDemLayer* mpDemLayer;
		};
	}
}

#endif  //_GEOSPATIALSCENE_H
