//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : cdrill_meshcreator.h
//  @ Date : 2014/7/5
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_CDRILL_MESHCREATOR_H)
#define _CDRILL_MESHCREATOR_H

#include "vrmine/vr_spatialinterface/igeomeshcreator.h"
#include "vrmine\vr_arithmetic\arithmetic_config.h"
#include <OGRE\Ogre.h>
#include "vrmine\vr_spatiallayer\demlayer.h"

namespace VirtualMine
{
	namespace Arithmetic
	{
		class CDrillSection
		{
			public:
				CDrillSection();
				~CDrillSection();
			public:
				void setCenter(const Ogre::Vector3& center);
				Ogre::Vector3 getCenter();

				void addPoint(const Ogre::Vector3& point);
				int  getPointsCount();
				Ogre::Vector3 getPoint(const int& index);
			private:
				Ogre::Vector3 mCenter;
				std::vector<Ogre::Vector3> mPoints;
		};

		class VR_ARITHMETIC_DLL CDrill_MeshCreator : public VirtualMine::SpatialInterface::CGeoMeshCreator
		{
		public: 
			CDrill_MeshCreator();
			~CDrill_MeshCreator();
		public:
			void createData(VirtualMine::SpatialInterface::GeoObjectVector& geoObjectVector,std::vector<VirtualMine::SpatialInterface::CGeoExtentionData*>& geoExtentionDatas);
		/*	void setDEMLayer(VirtualMine::SpatialLayer::CDemLayer*  demlayer);
			VirtualMine::SpatialLayer::CDemLayer* getDEMLayer();*/
		private:
			std::string createDrillMaterial(std::string materialName);
			Ogre::ManualObject* createUnitDrill();
		    CDrillSection* createSectionPoints(const Ogre::Vector3& position,const float& radius);

			
		private:
			std::vector<CDrillSection*> mSections; 
			//VirtualMine::SpatialLayer::CDemLayer* ref_pDemLayer;
		};


	}
}

#endif  //_CDRILL_MESHCREATOR_H
