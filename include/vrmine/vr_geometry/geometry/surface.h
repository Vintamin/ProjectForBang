//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : surface.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_SURFACE_H)
#define _SURFACE_H

#include "vrmine/vr_core/coredefine.h"
#include "vrmine/vr_geometry/geometry/point.h"

namespace VirtualMine
{
	namespace Geometry
	{
		class VR_GEOMETRY_DLL CSurface : public VirtualMine::SpatialInterface::CGeometry
		{
		public:
			CSurface();
			virtual ~CSurface();
			void addPoint(CPoint& point);
			void addPoint(const double& x,const double& y,const double& z);
			CPoint getPoint(const size_t& index);
			size_t getCount();
			void removePoint(const size_t& index);
			void computeRectangle(CPoint& upLeftPoint,CPoint& downRightPoint);
			virtual void toStream(VirtualMine::Core::CVRDataStream& datastream);
			virtual void fromStream(VirtualMine::Core::CVRDataStream& datastream);
			
		private:
			DoubleVector mXCoors;
			DoubleVector mYCoors;
			DoubleVector mZCoors;
		};

		class VR_GEOMETRY_DLL CGrid : public CSurface
		{
		public:
			CGrid();
			CGrid(const int& row,const int& col,const double& resolution);
			CPoint getPoint(const int& rowIndex,const int& colIndex);
			void setResolution(const double& resolution);
			double getResolution();
			void setRow(const int& row);
			int getRow();
			void setCol(const int& Col);
			int getCol();
			virtual void toStream(VirtualMine::Core::CVRDataStream& datastream);
			virtual void fromStream(VirtualMine::Core::CVRDataStream& datastream);


			~CGrid();

		protected:
			int mRow;
			int mCol;
			double mResolution;
			std::vector<CPoint> mPoints;
		};
	}
}

#endif  //_SURFACE_H
