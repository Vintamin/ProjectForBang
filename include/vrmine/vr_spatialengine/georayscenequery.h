//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : layermanager.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_CGEORAYSCENEQUERY_H)
#define _CGEORAYSCENEQUERY_H

#include "OGRE\OgreSceneManager.h"
#include "vrmine\vr_spatialengine\geoscenemanager.h"
#include "OGRE\OgreEntity.h"
#include "OGRE\OgreSubEntity.h"
#include "OGRE\OgreSceneQuery.h"
#include "OGRE\OgreRenderOperation.h"

namespace VirtualMine
{
	namespace SpatialEngine
	{
		class VR_SPATIALENGINE_DLL CGeoRaySceneQuery : public Ogre::RaySceneQuery
		{
		public:
			CGeoRaySceneQuery(Ogre::SceneManager* creator);
			~CGeoRaySceneQuery();
			void execute(Ogre::RaySceneQueryListener* listener);
			void getSceneMoveableByRay(Ogre::Ray& ray,Ogre::SceneNode* pSceneNode,
				std::vector<Ogre::MovableObject*>& moVector);
		
		};

		class VR_SPATIALENGINE_DLL CGeoRayIntersector 
		{
		public:
			CGeoRayIntersector();
			~CGeoRayIntersector();
			
			static std::pair<bool, Ogre::Real> intersect(Ogre::Ray& ray,Ogre::Entity* pEntity,const Ogre::Matrix4& worldMatrix);
			static std::pair<bool, Ogre::Real> intersect(Ogre::Ray& ray,Ogre::SubEntity* pSubEntity,const Ogre::Matrix4& worldMatrix);
			static std::pair<bool, Ogre::Real> intersect(Ogre::Ray& ray,Ogre::RenderOperation& renderOperation,const Ogre::Matrix4& worldMatrix);
 		};
	}
}

#endif  //_CGEORAYSCENEQUERY_H
