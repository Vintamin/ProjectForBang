//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : geoscenecamera.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_GEOSCENECAMERA_H)
#define _GEOSCENECAMERA_H

#include "vrmine\vr_spatialengine\spatialengine_config.h"
#include "OGRE\OgreCamera.h"
#include "OGRE\OgreRay.h"

namespace VirtualMine
{
	namespace SpatialEngine
	{
		class CCameraChangedListener;
		class  VR_SPATIALENGINE_DLL CGeoSceneCamera : public Ogre::Camera
		{
		public :
			CGeoSceneCamera(const Ogre::String& name, Ogre::SceneManager* sm);
			virtual ~CGeoSceneCamera(void);
			virtual Ogre::Ray getRayFromScreenXY(const int& x,const int& y);
			virtual Ogre::Vector3 unProject(const int& x,const int& y);
			virtual void setStandartMoveDis(const Ogre::Real& standartMoveDis);
			virtual Ogre::Real getStandartMoveDis();
			virtual void setStandartZoomDis(const Ogre::Real& standartZoomDis);
			virtual Ogre::Real getStandartZoomDis();
			virtual void setInitialCameraInfo(const Ogre::Vector3 initialPosition,
				const Ogre::Vector3 initialDirection);
			virtual void getInitialCameraInfo(Ogre::Vector3& initialPosition,
				Ogre::Vector3& initialDirection);
			virtual void addCameraListener(CCameraChangedListener* ref_pListener);
			virtual void removeCameraListener(CCameraChangedListener* ref_pListener);
			virtual void onChanged();
		public:
			static const Ogre::String DEFAULT_CAMERA_NAME;
			Ogre::Real mStandartMoveDis;
			Ogre::Real mStandartZoomDis;
			Ogre::Vector3 mInitialPosition;
			Ogre::Vector3 mInitialDirection;
			std::vector<CCameraChangedListener*> mCameraChangedListeners;
		};

		class VR_SPATIALENGINE_DLL CCameraChangedListener
		{
			public:
			CCameraChangedListener(){ref_mpGeoCamera = NULL;};
			virtual ~CCameraChangedListener(){};
			virtual void setGeoCamera(CGeoSceneCamera* ref_pGeoCamera)
			{
				ref_mpGeoCamera = ref_pGeoCamera;
			}
			virtual void onCameraInfoChanged(){};
			protected:
			CGeoSceneCamera* ref_mpGeoCamera;
		};
	}
}

#endif  //_GEOSCENECAMERA_H
