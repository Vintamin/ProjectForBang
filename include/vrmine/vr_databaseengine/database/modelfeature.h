//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : coallayerfeature.h
//  @ Date : 2014/8/6
//  @ Author : 王凯
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 



#if !defined(_MODELFEATURE_H)
#define _MODELFEATURE_H

#include "vrmine/vr_databaseengine/database/feature.h"
#include "vrmine/vr_databaseengine/database/field.h"
#include "vrmine\vr_databaseengine\database_config.h"
#include "vrmine/vr_databaseengine/database/propertyset.h"
#include "vrmine/vr_core/variant.h"

#include "vrmine/vr_core/geodatatype.h"

namespace VirtualMine
{
	namespace Database
	{
		class VR_DATABASEENGINE_DLL CModelFeature : public VirtualMine::Database::CFeature
		{
		public:
			CModelFeature(); 

			~CModelFeature();  

			std::string getName();

			void setName(const std::string& name);

			void addField(CField field);

			VirtualMine::Database::CField getValue(const int& index);

			VirtualMine::Database::CPropertySet* getPropertySet();

			void setFieldID(const int& id);

			void setFieldName(const std::string& name);
			
			void setFieldType(const std::string& name);  

			std::string getFieldName();

            std::string getFieldType();

			/*void setFieldBlob(Ogre::uchar* blob,int length);

			void setFieldBlob( VirtualMine::Core::CVRDataStream& datastream);

			void setFieldTexture(Ogre::uchar* blob,int length);

			void setFieldTexture( VirtualMine::Core::CVRDataStream& datastream);*/

			void setFieldPosX(const double& posX);

			void setFieldPosY(const double& posY);

			void setFieldPosZ(const double& posZ);


			double getFieldPosX();

			double getFieldPosY();

			double getFieldPosZ();

			double getFieldScaleX();

			double getFieldScaleY();

			double getFieldScaleZ();

			double getFieldTransX();

			double getFieldTransY();

			double getFieldTransZ();

			double getFieldRotateX();

			double getFieldRotateY();

			double getFieldRotateZ();

			 
			void setFieldScaleX(const double& scaleX);

			void setFieldScaleY(const double& scaleY);

			void setFieldScaleZ(const double& scaleZ);




			void setFieldTransX(const double& transX);

			void setFieldTransY(const double& transY);

			void setFieldTransZ(const double& transZ);


			void setFieldRotateX(const double& rotateX);

			void setFieldRotateY(const double& rotateY);

			void setFieldRotateZ(const double& rotateZ);

			void setFieldBlob(Ogre::uchar* blob,int length);

			void setFieldDeviceType(const int& deviceType);

			int getFieldDeviceType();

			void setDeviceType(const VirtualMine::Core::DeviceType& deviceType);

			VirtualMine::Core::DeviceType  getDeviceType();

		private:

			std::string mName;

			VirtualMine::Database::CPropertySet* mpPropertySet;

			VirtualMine::Core::DeviceType mDeviceType;

		};
	}
}

#endif //_MODELFEATURE_H