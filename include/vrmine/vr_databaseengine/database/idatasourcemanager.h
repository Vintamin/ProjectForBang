//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : idatasourcemanager.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_IDATASOURCEMANAGER_H)
#define _IDATASOURCEMANAGER_H

#include "vrmine\vr_core\baseobject.h"
#include "vrmine\vr_databaseengine\database_config.h"
#include "vrmine\vr_databaseengine\database\idatasourceinfo.h"
#include "vrmine\vr_databaseengine\database\idatasource.h"
#include <string>

namespace VirtualMine
{
	namespace Database
	{
		class VR_DATABASEENGINE_DLL IDataSourceManager : public VirtualMine::Core::CBaseObject
		{
		public:
			virtual void createDataSource(VirtualMine::Database::IDataSourceInfo* pDataSourceInfo);
			//virtual void connectDataSource();
			virtual std::string getType();
			virtual void openDataSource(VirtualMine::Database::IDataSourceInfo* pDataSourceInfo);   
			virtual void closeDataSource();
			virtual VirtualMine::Database::IDataSource* getDataSource();
			virtual void destroyDataSource();
			virtual void getSigleton();
			virtual void getSigletonPtr();
		};
		class VR_DATABASEENGINE_DLL CDataSourceManagerRegister
		{
		public:

			static CDataSourceManagerRegister* getSingletonPtr();
			static CDataSourceManagerRegister& getSingleton();
			
			~CDataSourceManagerRegister();
			
			bool registerDataSourceManager(IDataSourceManager* pDataSourceManager);
			IDataSourceManager* getDataSourceManager(const std::string& type);
			bool destroyDataSourceManager(IDataSourceManager* pDataSourceManager);

		protected:
			CDataSourceManagerRegister();
			
		private:
			static CDataSourceManagerRegister* mpSingletonPtr;
			
			std::map<std::string,IDataSourceManager*> mObjecMap;
		};
	}
}

#endif  //_IDATASOURCEMANAGER_H
