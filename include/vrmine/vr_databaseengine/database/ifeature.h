//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : ifeature.h
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#if !defined(_IFEATURE_H)
#define _IFEATURE_H

#include "vrmine\vr_databaseengine\database_config.h"
#include "vrmine\vr_databaseengine\database\propertyset.h"
#include <string>
#include <OGRE/OgrePrerequisites.h>

namespace VirtualMine
{
	namespace Database
	{
		class VR_DATABASEENGINE_DLL IFeature
		{
		public:
			IFeature();	

			virtual void setID(const int& id);

			virtual int getID();

		    virtual void setName(const std::string& name);

	        virtual std::string getName();  

			virtual std::string getType();

			virtual void setType(const std::string& type);

			virtual void addField(CField* field);

			virtual void deleteField(CField* field);


		/*	virtual void setFieldID(const int& id,const int& index);

			virtual void setFieldName(const std::string& name,const int& index);

			virtual void setFieldWidth(const float& width,const int& index);

			virtual void setFieldBlob(Ogre::uchar* blob,const int& index);*/

			virtual void setFieldID(const int& id);  

			virtual void setFieldName(const std::string& name);

			virtual void setFieldWidth(const float& width);

			virtual void setFieldHeight(const float& height);

			virtual void setFieldBlob(Ogre::uchar* blob,int length);

			virtual void setFieldTexture(Ogre::uchar* blob,int length);

			virtual void setFieldType(const std::string& type);

			virtual void setFieldSectionType(const int& sectionType);

		    virtual void setFieldHeightSupportType(const int& supportType);

			virtual void setFieldLanewayWindType(const int& lanewayWindType);

           
		    virtual int getFieldID();  

			virtual std::string getFieldName();

			virtual float getFieldWidth();

			virtual float getFieldHeight();

			virtual Ogre::uchar* getFieldBlob();

	     	virtual	int getFieldBlobLength();

			virtual Ogre::uchar* getFieldTexture();

			virtual std::string getFieldType();

			virtual int getFieldSectionType();

		    virtual int getFieldHeightSupportType();

			virtual int getFieldLanewayWindType();


		    virtual VirtualMine::Database::CPropertySet* getPropertySet();

		};
	}
}

#endif  //_IFEATURE_H
