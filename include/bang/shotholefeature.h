//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : coallayerfeature.h
//  @ Date : 2015/7/30
//  @ Author : 王凯
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 



#if !defined(_SHOTHOLEFEATURE_H)
#define _SHOTHOLEFEATURE_H

#include "vrmine/vr_databaseengine/database/feature.h"
#include "vrmine/vr_databaseengine/database/field.h"
#include "bang/rocklayerconfig.h"
#include "vrmine/vr_databaseengine/database/propertyset.h"

namespace VirtualMine
{
	namespace Bang_Database
	{
		class VR_BANG_DATABASEENGINE_DLL CShotHoleFeature : public VirtualMine::Database::CFeature
		{
		public:
			CShotHoleFeature(); 

			~CShotHoleFeature();  

			std::string getName();

			void setName(const std::string& name);

			void addField(VirtualMine::Database::CField field);

			VirtualMine::Database::CField getValue(const int& index);

			VirtualMine::Database::CPropertySet* getPropertySet();

			void setFieldProjectID(const int& id);
			int getFieldProjectID();

			void setFieldHoleID(const int& id);
			int getFieldHoleID();

			void setFieldType(const std::string& type);
			std::string getFieldType();

			void setFieldPositionX(const double& posX);

			void setFieldPositionY(const double& posY);

			void setFieldPositionZ(const double& posZ); 

			double getFieldPositionX();

			double getFieldPositionY();

			double getFieldPositionZ(); 


			void setFieldPositionEndX(const double& posX);

			void setFieldPositionEndY(const double& posY);

			void setFieldPositionEndZ(const double& posZ); 

			double getFieldPositionEndX();

			double getFieldPositionEndY();

			double getFieldPositionEndZ(); 

			int getFieldBangOrder();
			void setFieldBangOrder(const int& order);

		    void setFieldZhuangyaoLength(const double& length);
	        double getFieldZhuangyaoLength(); 

            void setFieldShuipaoniLength(const double& length);
	        double getFieldShuipaoniLength(); 

            void setFieldFengniLength(const double& length);
	        double getFieldFengniLength(); 


			void setFieldShotHoleDepth(const double& length);
			double getFieldShotHoleDepth(); 

			void setFieldShotHoleInterLength(const double& length);
			double getFieldShotHoleInterLength(); 

			void setFieldSmallResistLine(const double& length);
			double getFieldSmallResistLine(); 

		};
	}
}

#endif //_SHOTHOLEFEATURE_H