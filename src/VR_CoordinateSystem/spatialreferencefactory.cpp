//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : spatialreferencefactory.cpp
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#include "vrmine\vr_coordinatesystem\coordinatesystem\spatialreferencefactory.h"

namespace VirtualMine
{
	namespace CoordinateSystem
	{
		CSpatialReferenceLib* CSpatialReferenceLib::mSrLib = NULL;

		CSpatialReferenceLib CSpatialReferenceLib::getSingleton()
		{
			if (mSrLib == NULL)
				mSrLib = new CSpatialReferenceLib();
			return *mSrLib;
		}

		CSpatialReferenceLib* CSpatialReferenceLib::getSingletonPtr()
		{
			if (mSrLib == NULL)
				mSrLib = new CSpatialReferenceLib();
			return mSrLib;
		}

		CSpatialReferenceLib::~CSpatialReferenceLib()
		{

		}

		VirtualMine::SpatialInterface::ISpatialReference* CSpatialReferenceLib::getSpatialReference(
			VirtualMine::SpatialInterface::Spheroid spheroid)
		{
			SpatialReferenceVector::iterator bItr = this->mSpatialReferenceVector.begin();
			SpatialReferenceVector::iterator eItr = this->mSpatialReferenceVector.end();
			while (bItr != eItr)
			{
				if ((*bItr)->getSpheroid() == spheroid)
				{
					return *bItr;
				}
				++bItr;
			}
		}

		bool CSpatialReferenceLib::registerSpatialReference(VirtualMine::SpatialInterface::ISpatialReference* pSR)
		{
			this->mSpatialReferenceVector.push_back(pSR);
			return true;
		}

		CSpatialReferenceLib::CSpatialReferenceLib()
		{

		}

		bool CSpatialReferenceLib::removeSpatialReference(VirtualMine::SpatialInterface::ISpatialReference* pSR)
		{
			if (pSR)
			{
				SpatialReferenceVector::iterator bItr = this->mSpatialReferenceVector.begin();
				SpatialReferenceVector::iterator eItr = this->mSpatialReferenceVector.end();
				while (bItr != eItr)
				{
					if (*bItr == pSR)
					{
						this->mSpatialReferenceVector.erase(bItr);
						return true;
					}
					++bItr;
				}

			}
		}
	}
}
