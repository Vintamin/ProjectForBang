//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : spatialmeasuretool.cpp
//  @ Date : 2014/7/6
//  @ Author : 盛佳良
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#include "vrmine\vr_spatialanalyse\spatialanalyse\spatialmeasuretool.h"
#include "vrmine/vr_geometry/geometry/line.h"
#include "vrmine/vr_spatialobject/base/geoline.h"

using namespace VirtualMine::Core;

namespace VirtualMine
{
	namespace SpatialAnalyse
	{
		CSpatialMeasureTool::CSpatialMeasureTool(VirtualMine::Scene::CGeoSpatialControl* ref_pSceneControl)
			:ref_mpSceneControl(ref_pSceneControl)
		{
			this->mCurPoint = Ogre::Vector3::ZERO;
		}

		CSpatialMeasureTool::~CSpatialMeasureTool()
		{}
		
		void CSpatialMeasureTool::mouseReleaseEvent(const int& x ,const int& y , const int& button)
		{
			if (this->mIsMouseDown && !this->mIsMouseDrag)
			{
				Ogre::Vector3 intersectPoint(Ogre::Vector3::ZERO);
				if (this->ref_mpSceneControl->getGeoSceneManager()->getRayIntersectedPoint(x,y,intersectPoint))
				{
					this->mPoints.push_back(Ogre::Vector3(intersectPoint.x,intersectPoint.y,intersectPoint.z));
				}
			}
			mIsMouseDown = false;
			mIsMouseDrag = false;
		}
		
		void CSpatialMeasureTool::mousePressEvent(const int& x ,const int& y , const int& button)
		{
			CTool::mousePressEvent(x,y,button);
			if (button == 1)
			{
				this->mIsMouseDown = true;
			}
			else
			{
				this->mIsMouseDown = false;
			}
		}
		
		void CSpatialMeasureTool::mouseDoubleClickEvent(const int& x ,const int& y , const int& button)
		{
			//this->mIsMouseDown = true;
			//CTool::mouseDoubleClickEvent(x,y,button);
		}
		
		void CSpatialMeasureTool::mouseMoveEvent(const int& x ,const int& y, const int& button)
		{
			CTool::mouseMoveEvent(x,y,button);
		}
	}
}