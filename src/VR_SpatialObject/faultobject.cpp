//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : 三维数字矿山平台
//  @ File Name : faultobject.cpp
//  @ Date : 2014/8/6
//  @ Author : 朱炜鹏
//  @ Implement : 
//  @ Company : 中国矿业大学(北京)
//  @ Copyright:  2014-2020
//  @ Description : 


#include "vrmine/vr_spatialobject/mine/faultobject.h"
#include "vrmine/vr_core/geodatatype.h"
#include "vrmine/vr_style/style/faultstyle.h"
#include "vrmine/vr_geometry/geometry/fault.h"
#include "vrmine/vr_spatialobject/geoproperty/faultproperty.h"
#include "vrmine/vr_databaseengine/database/faultlayerfeature.h"

using namespace VirtualMine::GeoProperty;
using namespace VirtualMine::Database;
using namespace VirtualMine::Style;
using namespace VirtualMine::SpatialInterface;
using namespace VirtualMine::Geometry;

namespace VirtualMine
{
	namespace Mine
	{
		CFaultObject::CFaultObject()
		{
			this->setType(VirtualMine::Core::GeoDataType::GDT_FAULT);
		}

		CFaultObject::~CFaultObject()
		{

		}

		VirtualMine::SpatialInterface::IStyle* CFaultObject::getStyle()
		{
			VirtualMine::SpatialInterface::IStyle* pStyle =  CGeoObject::getStyle();
			if (pStyle == NULL)
			{
				pStyle = new VirtualMine::Style::CFaultStyle();
				CGeoObject::setStyle(pStyle,true);
				//delete pStyle;
			}
			return  CGeoObject::getStyle();
		}

		VirtualMine::SpatialInterface::IGeometry* CFaultObject::getGeometry()
		{
			VirtualMine::SpatialInterface::IGeometry* pGeometry =  CGeoObject::getGeometry();
			if (pGeometry == NULL)
			{
				pGeometry = new  VirtualMine::Geometry::CFaultGeometry();
				CGeoObject::setGeometry(pGeometry,true);
				// delete pStyle;
			}
			return  CGeoObject::getGeometry();
		}

		VirtualMine::SpatialInterface::IGeoProperty* CFaultObject::getGeoProperty()
		{
			VirtualMine::SpatialInterface::IGeoProperty* pGeoProperty =  CGeoObject::getGeoProperty();
			if (pGeoProperty == NULL)
			{
				pGeoProperty = new VirtualMine::GeoProperty::CFaultProperty();
				CGeoObject::setGeoProperty(pGeoProperty,true);
				//delete pStyle;
			}
			return  CGeoObject::getGeoProperty();
		}

		void CFaultObject::fromFeature(VirtualMine::Database::IFeature* pFeature)
		{
			CFaultLayerFeature* faultFeature = dynamic_cast<CFaultLayerFeature*>(pFeature);
			int id = faultFeature->getFieldID();
			std::string name  = faultFeature->getFieldName();
			double dipangle = faultFeature->getFieldDipAngle();
			double upW = faultFeature->getFieldUpLength();
			double downW = faultFeature->getFieldDownLength();


			void* pData3 = dynamic_cast<VirtualMine::Database::CFaultLayerFeature*>(pFeature)->getPropertySet()->getFields().at(5).getVarient().data();
			Ogre::uchar* blob = static_cast<Ogre::uchar*>(pData3);

			int legth = dynamic_cast<VirtualMine::Database::CFaultLayerFeature*>(pFeature)->getPropertySet()->getFields().at(5).getVarient().getLength();





			VirtualMine::Core::CVRDataStream ds;
			//VirtualMine::Core::CVRDataStream textureds;

			ds.wirteBlob(blob,legth);
			//textureds.wirteBlob(imagetexture,texturelength);

			ds.reseek(0);

			dynamic_cast<CFaultProperty*>(this->getGeoProperty())->setName(name);
			dynamic_cast<CFaultProperty*>(this->getGeoProperty())->setDipAngle(dipangle);
			dynamic_cast<CFaultProperty*>(this->getGeoProperty())->setHeight(downW + upW);
			dynamic_cast<CFaultGeometry*>(this->getGeometry())->fromStream(ds);

		}

		VirtualMine::Database::IFeature* CFaultObject::toFeature()
		{
			std::string name = dynamic_cast<CFaultProperty*>(this->getGeoProperty())->getName();
			
			float dipAngle = dynamic_cast<CFaultProperty*>(this->getGeoProperty())->getDipAngle();
			float upHeight = dynamic_cast<CFaultProperty*>(this->getGeoProperty())->getHeight();
			

			upHeight = 0.5 * upHeight;
			float downHeight = upHeight;

			VirtualMine::Core::CVRDataStream datastream;
			static_cast<CFaultGeometry*>(this->getGeometry())->toStream(datastream);

			datastream.reseek(0);
			VirtualMine::Database::CFaultLayerFeature* faultLayerfeature = new VirtualMine::Database::CFaultLayerFeature();
			
			faultLayerfeature->setFieldID(1);
			faultLayerfeature->setFieldName(name);
			faultLayerfeature->setFieldDipAngle(dipAngle);
			faultLayerfeature->setFieldDownLength(downHeight);
			faultLayerfeature->setFieldUpLength(upHeight);

			faultLayerfeature->setFieldBlob(datastream.getData(),datastream.getLength());
		
	
			return faultLayerfeature;		
		}

	}

}
